on:
    push:
      branches:
        - "**"

jobs:
    docs-build:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v4
        
        - name: Setup Node
          uses: actions/setup-node@v4
          with:
            node-version: 22
        - run: |
            cd docs
            yarn install --no-lockfile
            yarn build
    
    api-lint:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Go
          uses: actions/setup-go@v4
          with:
            go-version: 1.23

        - run: |
            cd vote-api
            go mod tidy
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b ./bin v1.63.4
            ./bin/golangci-lint run

    api-tests:
        runs-on: ubuntu-latest
        needs: api-lint
        steps:
        - name: Checkout code
          uses: actions/checkout@v4
  
        - name: Setup Go
          uses: actions/setup-go@v4
          with:
            go-version: 1.23

        - run: |
            cd vote-api
            go test ./...

    api-build:
        runs-on: ubuntu-latest
        needs: api-tests
        steps:
        - name: Checkout code
          uses: actions/checkout@v4
    
        - name: Setup Go
          uses: actions/setup-go@v4
          with:
            go-version: "1.23"

        - run: |
            cd vote-api
            go build

    api-format:
        runs-on: ubuntu-latest
        needs: api-build
        steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Go
          uses: actions/setup-go@v4
          with:
            go-version: 1.23

        - run: |
            cd vote-api
            go fmt ./...

    web-lint:
        runs-on: ubuntu-latest
        needs: api-build
        steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Node
          uses: actions/setup-node@v4
          with:
            node-version: 22

        - run: |
            cd web-client
            yarn install --no-lockfile
            yarn lint

    web-build:
        runs-on: ubuntu-latest
        needs: web-lint
        steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Node
          uses: actions/setup-node@v4
          with:
            node-version: 22

        - run: |
            cd web-client
            yarn install --no-lockfile
            yarn build

    check-format:
        runs-on: ubuntu-latest
        needs: web-build
        steps:
        - name: Checkout code
          uses: actions/checkout@v4
  
        - name: Setup Node
          uses: actions/setup-node@v4
          with:
            node-version: 22

        - run: |
            cd web-client
            yarn install --no-lockfile
            yarn format:check

    push_api_to_registry:
        name: push docker image to hub
        needs: api-build
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Build docker image
            run: |
              cd vote-api
              docker build -t chevalier/vote-api:latest .

          - name: Login to docker registry
            uses: docker/login-action@v3
            with:
              username: ${{secrets.USERNAME_CHEVALIER}}
              password: ${{secrets.PASSWORD_CHEVALIER}}

          - name: Push docker image to registry
            run: |
              echo $PASSWORD_CHEVALIER | docker login -u $USERNAME_CHEVALIER --password-stdin
              docker push $USERNAME_CHEVALIER/vote-api:latest

    push_web_to_registry:
      name: push docker image to hub
      needs: web-build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Build docker image
          run: |
            cd web-client
            docker build -t chevalier/web-client:latest .

        - name: Login to docker registry
          uses: docker/login-action@v3
          with:
            username: ${{secrets.USERNAME_CHEVALIER}}
            password: ${{secrets.PASSWORD_CHEVALIER}}
        
        - name: Push docker image to registry
          run: |
            echo $PASSWORD_CHEVALIER | docker login -u $USERNAME_CHEVALIER --password-stdin
            docker push $USERNAME_CHEVALIER/web-client:latest